
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.PackageManagement
{
	public partial class PackageManagementOptionsWidget
	{
		private global::Gtk.VBox mainVBox;
		private global::Gtk.HBox restorePackagesLabelHBox;
		private global::Gtk.Label restorePackagesLabel;
		private global::Gtk.Label restorePackagesPaddingLabel;
		private global::Gtk.CheckButton automaticPackageRestoreOnOpeningSolutionCheckBox;
		private global::Gtk.Label bottomLabel;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.PackageManagement.PackageManagementOptionsWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoDevelop.PackageManagement.PackageManagementOptionsWidget";
			// Container child MonoDevelop.PackageManagement.PackageManagementOptionsWidget.Gtk.Container+ContainerChild
			this.mainVBox = new global::Gtk.VBox ();
			this.mainVBox.Name = "mainVBox";
			this.mainVBox.Spacing = 6;
			// Container child mainVBox.Gtk.Box+BoxChild
			this.restorePackagesLabelHBox = new global::Gtk.HBox ();
			this.restorePackagesLabelHBox.Name = "restorePackagesLabelHBox";
			this.restorePackagesLabelHBox.Spacing = 6;
			// Container child restorePackagesLabelHBox.Gtk.Box+BoxChild
			this.restorePackagesLabel = new global::Gtk.Label ();
			this.restorePackagesLabel.Name = "restorePackagesLabel";
			this.restorePackagesLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Package Restore</b>");
			this.restorePackagesLabel.UseMarkup = true;
			this.restorePackagesLabelHBox.Add (this.restorePackagesLabel);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.restorePackagesLabelHBox [this.restorePackagesLabel]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child restorePackagesLabelHBox.Gtk.Box+BoxChild
			this.restorePackagesPaddingLabel = new global::Gtk.Label ();
			this.restorePackagesPaddingLabel.Name = "restorePackagesPaddingLabel";
			this.restorePackagesLabelHBox.Add (this.restorePackagesPaddingLabel);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.restorePackagesLabelHBox [this.restorePackagesPaddingLabel]));
			w2.Position = 1;
			this.mainVBox.Add (this.restorePackagesLabelHBox);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.mainVBox [this.restorePackagesLabelHBox]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child mainVBox.Gtk.Box+BoxChild
			this.automaticPackageRestoreOnOpeningSolutionCheckBox = new global::Gtk.CheckButton ();
			this.automaticPackageRestoreOnOpeningSolutionCheckBox.CanFocus = true;
			this.automaticPackageRestoreOnOpeningSolutionCheckBox.Name = "automaticPackageRestoreOnOpeningSolutionCheckBox";
			this.automaticPackageRestoreOnOpeningSolutionCheckBox.Label = global::Mono.Unix.Catalog.GetString ("_Automatically restore packages when opening a solution.");
			this.automaticPackageRestoreOnOpeningSolutionCheckBox.DrawIndicator = true;
			this.automaticPackageRestoreOnOpeningSolutionCheckBox.UseUnderline = true;
			this.automaticPackageRestoreOnOpeningSolutionCheckBox.BorderWidth = ((uint)(10));
			this.mainVBox.Add (this.automaticPackageRestoreOnOpeningSolutionCheckBox);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.mainVBox [this.automaticPackageRestoreOnOpeningSolutionCheckBox]));
			w4.Position = 1;
			w4.Expand = false;
			w4.Fill = false;
			// Container child mainVBox.Gtk.Box+BoxChild
			this.bottomLabel = new global::Gtk.Label ();
			this.bottomLabel.Name = "bottomLabel";
			this.mainVBox.Add (this.bottomLabel);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.mainVBox [this.bottomLabel]));
			w5.Position = 2;
			this.Add (this.mainVBox);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.automaticPackageRestoreOnOpeningSolutionCheckBox.Toggled += new global::System.EventHandler (this.AutomaticPackageRestoreOnOpeningSolutionCheckBoxToggled);
		}
	}
}
